@model AgentScrum.Web.Models.Prompt

@{
    ViewData["Title"] = "Create Prompt";
}

<div class="max-w-full mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="md:flex md:items-center md:justify-between mb-8">
        <div class="flex-1 min-w-0">
            <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                Create New Prompt
            </h2>
            <p class="mt-1 text-sm text-gray-500">
                Create a new system prompt for LLMs
            </p>
        </div>
        <div class="mt-4 flex md:mt-0 md:ml-4">
            <a asp-action="Index" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 17l-5-5m0 0l5-5m-5 5h12" />
                </svg>
                Back to List
            </a>
        </div>
    </div>

    <div class="bg-white shadow overflow-hidden sm:rounded-lg">
        <div class="px-4 py-5 border-b border-gray-200 sm:px-6 bg-gray-50">
            <h3 class="text-lg leading-6 font-medium text-gray-900 flex items-center">
                <svg class="h-6 w-6 text-blue-500 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                Prompt Details
            </h3>
            <p class="mt-1 max-w-2xl text-sm text-gray-500">
                Enter the details for the new prompt
            </p>
        </div>
        
        <div class="px-4 py-5 sm:p-6">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4" />
                
                <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
                    <div class="sm:col-span-3">
                        <label asp-for="Name" class="block text-sm font-medium text-gray-700">Name</label>
                        <div class="mt-1">
                            <input asp-for="Name" class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full px-4 py-2 text-base border-gray-300 rounded-md" placeholder="Enter prompt name" />
                        </div>
                        <span asp-validation-for="Name" class="text-sm text-red-500"></span>
                    </div>

                    <div class="sm:col-span-3">
                        <label asp-for="Category" class="block text-sm font-medium text-gray-700">Category</label>
                        <div class="mt-1">
                            <input asp-for="Category" class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full px-4 py-2 text-base border-gray-300 rounded-md" placeholder="Enter category (optional)" />
                        </div>
                        <span asp-validation-for="Category" class="text-sm text-red-500"></span>
                    </div>

                    <div class="sm:col-span-6">
                        <label asp-for="Description" class="block text-sm font-medium text-gray-700">Description</label>
                        <div class="mt-1">
                            <textarea asp-for="Description" rows="2" class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full px-4 py-2 text-base border-gray-300 rounded-md" placeholder="Enter a brief description of this prompt"></textarea>
                        </div>
                        <span asp-validation-for="Description" class="text-sm text-red-500"></span>
                    </div>

                    <div class="sm:col-span-6">
                        <label asp-for="Content" class="block text-sm font-medium text-gray-700">Prompt Content (Markdown)</label>
                        <div class="mt-1">
                            <div class="border border-gray-300 rounded-md overflow-hidden">
                                <div class="bg-gray-50 px-4 py-2 border-b border-gray-300 flex justify-between items-center">
                                    <div class="flex space-x-2">
                                        <button type="button" onclick="insertMarkdown('**', '**')" class="p-1 rounded hover:bg-gray-200" title="Bold">
                                            <svg class="h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                                            </svg>
                                        </button>
                                        <button type="button" onclick="insertMarkdown('*', '*')" class="p-1 rounded hover:bg-gray-200" title="Italic">
                                            <svg class="h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                                            </svg>
                                        </button>
                                        <button type="button" onclick="insertMarkdown('# ', '')" class="p-1 rounded hover:bg-gray-200" title="Heading">
                                            <svg class="h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                                            </svg>
                                        </button>
                                        <button type="button" onclick="insertMarkdown('- ', '')" class="p-1 rounded hover:bg-gray-200" title="List">
                                            <svg class="h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                                            </svg>
                                        </button>
                                        <button type="button" onclick="insertMarkdown('```', '```')" class="p-1 rounded hover:bg-gray-200" title="Code Block">
                                            <svg class="h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                                            </svg>
                                        </button>
                                    </div>
                                    <div>
                                        <button type="button" id="previewToggle" class="inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                            Preview
                                        </button>
                                    </div>
                                </div>
                                <div id="editorContainer" class="w-full">
                                    <textarea asp-for="Content" id="markdownEditor" rows="15" class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full px-4 py-3 text-base border-0 resize-none" placeholder="Enter your prompt content here using Markdown..."></textarea>
                                    <div id="markdownPreview" class="hidden p-4 prose max-w-none"></div>
                                </div>
                            </div>
                        </div>
                        <span asp-validation-for="Content" class="text-sm text-red-500"></span>
                    </div>
                </div>

                <div class="pt-5">
                    <div class="flex justify-end">
                        <a asp-action="Index" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Cancel
                        </a>
                        <button type="submit" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Create
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>
        // Function to insert markdown syntax
        function insertMarkdown(before, after) {
            const editor = document.getElementById('markdownEditor');
            const start = editor.selectionStart;
            const end = editor.selectionEnd;
            const selectedText = editor.value.substring(start, end);
            const replacement = before + selectedText + after;
            editor.value = editor.value.substring(0, start) + replacement + editor.value.substring(end);
            
            // Set cursor position after insertion
            const newCursorPos = start + before.length + selectedText.length + after.length;
            editor.focus();
            editor.setSelectionRange(newCursorPos, newCursorPos);
            
            // Update preview if visible
            updatePreview();
        }
        
        // Function to update the preview
        function updatePreview() {
            const editor = document.getElementById('markdownEditor');
            const preview = document.getElementById('markdownPreview');
            preview.innerHTML = marked.parse(editor.value);
        }
        
        // Toggle between editor and preview
        document.getElementById('previewToggle').addEventListener('click', function() {
            const editor = document.getElementById('markdownEditor');
            const preview = document.getElementById('markdownPreview');
            const button = document.getElementById('previewToggle');
            
            if (editor.classList.contains('hidden')) {
                editor.classList.remove('hidden');
                preview.classList.add('hidden');
                button.textContent = 'Preview';
            } else {
                updatePreview();
                editor.classList.add('hidden');
                preview.classList.remove('hidden');
                button.textContent = 'Edit';
            }
        });
        
        // Update preview when editor content changes
        document.getElementById('markdownEditor').addEventListener('input', updatePreview);
    </script>
} 